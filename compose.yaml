version: '3'
services:
  postgres:
    image: 'postgres:16.2'
    env_file:
      - .env
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    networks:
      - mynetwork
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_VERSION: ${SERVICE_VERSION}
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${PROFILE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - TEMPORAL_CONNECTION_TARGET=${TEMPORAL_HOST}:${TEMPORAL_PORT}
    depends_on:
      - postgres
      - temporal
    networks:
      - mynetwork
  temporal:
    image: 'temporalio/auto-setup:1.22.7'
    env_file:
      - .env
    environment:
      - 'DB=postgres'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PWD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_SEEDS=postgres'
      - 'DB_PORT=${POSTGRES_PORT}'
    depends_on:
      - postgres
    ports:
      - ${TEMPORAL_PORT}:${TEMPORAL_PORT}
    networks:
      - mynetwork
  temporal-web:
    image: 'temporalio/web'
    environment:
      - 'TEMPORAL_GRPC_ENDPOINT=${TEMPORAL_HOST}:${TEMPORAL_PORT}'
      - 'TEMPORAL_PERMIT_WRITE_API=true'
    depends_on:
      - temporal
    ports:
      - '8088:8088'
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge